# library(arrow)
library(tidyverse)

source("helpers.R")


cols <- read_csv("data/CY07_MSU_STU_COG_10.csv") %>% colnames()

fields <- c("cog", "math", "read", "science")


## preparing question names 

full_paths <- fs::dir_ls(path = "Compendia_Cognitive/cog/", regexp = "^Compendia_Cognitive/cog/PP")

questions <- purrr::map(full_paths, readxl::read_xlsx)  %>% 
  purrr::map(renamer) %>% 
  purrr::map(function(x){x %>% select(questions)})

names(questions) <- fields

all_questions <- bind_rows(questions) %>% pull()

## Use the batches to select only relevant questions, CNT, and CNTSCHID

filesnpaths <- map_chr(c(1:7), function(i) paste0("SPSS_STU_COG/COG/chunk_",i,".csv"))
new_files_names <- map_chr(c(1:7), function(i) paste0("chunk_clean",i,".csv"))


## ask prof KhÃ¨l about this???
## No need, I figured it out, this is faster than the loop below
## it doesn't matter though
# tictoc::tic()
map2(filesnpaths, new_files_names, select_n_write, cols = all_questions)
# tictoc::toc()

## go for a simple loop instead 
# tictoc::tic()
# for(i in 1:7){
#    x <- data.table::fread(paste0("SPSS_STU_COG/COG/chunk_",i,".csv")) %>% 
#      select(CNT, CNTSCHID, all_of(all_questions))
#    x %>% 
#      data.table::fwrite(paste0("data/chunk_clean",i,".csv"))
#    rm(x)
# }
# tictoc::toc()

## now that we got the data we want, in format that can be managebale locally
## I can simply start constructing my countrywise data
## filter by CNT for HUN, CSZ, SLK, and PLN
## before that, let's recombine all the batches into one dataset
new_files_paths <- map_chr(c(1:7), function(i) paste0("data/chunk_clean",i,".csv"))

data <- map(new_files_paths, function(x) read_csv(x)) 

#### BE CAREFUL WITH THE FILTER HERE

data_v4 <- data %>% map(
  function(x){x %>% filter(CNT %in% c('HUN', 'POL', 'CZE', 'SVK'))}
  ) %>% 
  bind_rows(data_v4)

data_v4 %>% 
  write_csv("data/v4_student_res_raw.csv")

rm(data)

raw_subjects_data <- questions %>% 
  map(field_data_creator_2, data = data_v4)

raw_subjects_data %>% 
  write_rds("data/v4_student_res_bysubject.rds")

raw_subjects_data <- read_rds('data/v4_student_res_bysubject.rds')


library(data.table)
setDF(data)


science <- raw_subjects_data[["science"]] %>%
  select(
    CNTSCHID,
    ends_with("S")
  ) %>% 
  janitor::remove_empty(which = c("rows", "cols"))



science %>% 
  mutate(
    sum = rowSums(.[,2:ncol(.)], na.rm = T), # the sum of all full credit answers
    cnt = str_extract(CNTSCHID, "^.{2}")
  ) %>% 
  group_by(CNTSCHID) %>% 
  summarise(
    cnt,
    med = median(sum, na.rm = T),
    avg = mean(sum, na.rm = T)
  ) %>% # the average of the full credit obtained in the school
  ggplot()+
  geom_histogram(aes(x = avg, fill= cnt))
  
  

  

### maybe put this in the helpers folder?
aggregated_schools <- raw_subjects_data %>% 
  map(
    function(x){
      x %>% 
        select(
          CNTSCHID,
          ends_with("S")
        ) %>% 
        janitor::remove_empty(which = c("rows", "cols")) %>%
        mutate(
          sum = rowSums(.[,2:ncol(.)], na.rm = T) # the sum of all full credit answers
        ) %>% 
        group_by(CNTSCHID) %>% 
        summarise(
          med = median(sum, na.rm = T),
          avg = mean(sum, na.rm = T)
        ) %>% # the average of the full credit obtained in the school
        ungroup() %>% 
        select(CNTSCHID, avg, med) 
        # mutate(
        #   cnt = str_extract(CNTSCHID, "^.{2}")
        # )
    }
  )

## add prefixes so that we know what we are dealing with, this can be more elegantly written but whatever

agg_schools_full <- map2(
  aggregated_schools, 
  fields,
  function(d, f){
    c <- colnames(d)[2:3]
    cnew <- map(c, function(i) paste0(i,'_',f))
    colnames(d)[2:3] <- cnew
    return(d)
  }
) %>% 
  reduce(
    left_join, 
    by = "CNTSCHID"
  ) 
  
  
agg_schools_full %>% 
  write_csv("data/agg_school_full.csv")

## still need to correctly aggregate this data.

################################################################################
## join with the school dataset 

schools <- haven::read_sav("SPSS_SCH_QQQ/SCH/CY07_MSU_SCH_QQQ.sav")

## what are the questions we should investigate?

school_cols <- c("SC001","SC013", "SC016", "SC162", "SC011", "SC167", "SC002", "SC018", "SC003", "SC053", "SC164", "SC064")

## Needed school data
filtered_schools <- schools %>% 
  select(
    CNT,
    CNTSCHID,
    starts_with("SC001"),
    starts_with("SC013"),
    starts_with("SC016"),
    starts_with("SC162"),  
    starts_with("SC011"),  
    starts_with("SC167"),  
    starts_with("SC002"),  
    starts_with("SC018"),  
    starts_with("SC003"),  
    starts_with("SC053"),  
    starts_with("SC164"),
    starts_with("SC064")
    ) %>% 
  filter(CNT %in% c('HUN', 'POL', 'CZE', 'SVK'))

filtered_schools %>% 
  write_csv("data/v4_schools_filtered.csv")



schools <- read_csv("data/v4_schools_filtered.csv")
students <- read_csv("data/agg_school_full.csv")


left_join(schools, students, by = "CNTSCHID") %>% 
  janitor::remove_empty(which = c("rows", "cols")) %>% 
  write_csv("FINAL_DATA.csv")
  












